<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductItemMapper">
    <!-- 상품 품목 등록 -->
    <insert id="insertProductItem" parameterType="ProductItem">
        INSERT INTO product_items (
            product_id,
            size,
            color,
            is_active
        ) VALUES (
            #{productId},
            #{size},
            #{color},
            #{isActive}
        )
    </insert>

    <!-- 상품 품목 조회 -->
    <select id="getProductItemForUpdate" parameterType="Integer" resultType="ProductItem">
        SELECT
            product_item_id as productItemId,
            product_id as productId,
            stock_quantity as stockQuantity,
            reserved_quantity as reservedQuantity,
            size,
            color,
            sales_count as salesCount,
            created_at as createdAt,
            updated_at as updatedAt,
            is_active as isActive,
            is_deleted as isDeleted,
            version
        FROM product_items
        WHERE product_item_id = #{productItemId}
        FOR UPDATE
    </select>

    <!-- 상품 품목 수정 -->
    <update id="updateProductItemWithOptimisticLock" parameterType="ProductItem">
        UPDATE product_items
        SET
            size = #{size},
            color = #{color},
            is_active = #{isActive},
            is_deleted = #{isDeleted},
            version = version + 1
        WHERE product_item_id = #{productItemId}
        AND version = #{version}
    </update>

    <!-- 상품 품목 재고 1 증가 -->
    <update id="increaseOneStock" parameterType="Integer">
        UPDATE product_items
        SET
            stock_quantity = stock_quantity + 1
        WHERE product_item_id = #{productItemId}
    </update>

    <!-- 상품 품목 재고 1 감소 -->
    <update id="decreaseOneStock" parameterType="Integer">
        UPDATE product_items
        SET
            stock_quantity = stock_quantity - 1
        WHERE product_item_id = #{productItemId}
    </update>

    <!-- 상품 품목 예약 수량 1 증가 -->
    <update id="increaseOneReservedStock" parameterType="Integer">
        UPDATE product_items
        SET
            reserved_quantity = reserved_quantity + 1
        WHERE product_item_id = #{productItemId}
    </update>

    <!-- 상품 품목 예약 수량 1 감소 -->
    <update id="decreaseOneReservedStock" parameterType="Integer">
        UPDATE product_items
        SET
            reserved_quantity = reserved_quantity - 1
        WHERE product_item_id = #{productItemId}
    </update>


    <!-- 주문한 상품 수량만큼 상품 품목 재고 감소 & 예약 수량 증가 -->
    <update id="ChangeStockByNewOrder" parameterType="OrderProduct">
        UPDATE product_items
        SET
            stock_quantity = stock_quantity - #{originalQuantity},
            reserved_quantity = reserved_quantity + #{originalQuantity}
        WHERE product_item_id = #{productItemId}
    </update>

    <!-- 주문 취소/반품 시 상품 품목 재고 증가 & 예약 수량 감소 -->
    <update id="StockRecovery" parameterType="OrderProduct">
        UPDATE product_items
        SET
            stock_quantity = stock_quantity + #{requestQuantity},
            reserved_quantity = reserved_quantity - #{requestQuantity}
        WHERE product_item_id = #{productItemId}
    </update>

    <!-- 구매 확정으로 인한 예약 수량 감소 & 판매 수량 증가 -->
    <update id="ChangeStockByPurchaseConfirmation" parameterType="OrderProduct">
        UPDATE product_items
        SET
            reserved_quantity = reserved_quantity - #{changedQuantity},
            sales_count = sales_count + #{changedQuantity}
        WHERE product_item_id = #{productItemId}
    </update>
    
    <!-- 결제 실패로 인한 주문 취소 시 상품 품목 재고 증가 & 예약 수량 감소 -->
    <update id="StockRecoveryForPortOne" parameterType="OrderProduct">
        UPDATE product_items
        SET
            stock_quantity = stock_quantity + #{changedQuantity},
            reserved_quantity = reserved_quantity - #{changedQuantity}
        WHERE product_item_id = #{productItemId}
    </update>

    <!-- 상품 품목 목록 조회 -->
    <select id="getProductItemsByProductId" parameterType="Integer" resultType="ProductItem">
        SELECT
            product_item_id as productItemId,
            product_id as productId,
            stock_quantity as stockQuantity,
            reserved_quantity as reservedQuantity,
            size,
            color,
            sales_count as salesCount,
            created_at as createdAt,
            updated_at as updatedAt,
            is_active as isActive,
            is_deleted as isDeleted,
            version
        FROM product_items
        WHERE product_id = #{productId}
        AND is_deleted = 0
        ORDER BY product_item_id DESC
    </select>
    
    

</mapper>
